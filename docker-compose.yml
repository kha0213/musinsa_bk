version: '3.8'

services:
  redis:
    image: redis:7.2-alpine
    container_name: musinsa-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - musinsa-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: musinsa-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_TIMEOUT=2000ms
      - SPRING_REDIS_LETTUCE_POOL_MAX_ACTIVE=8
      - SPRING_REDIS_LETTUCE_POOL_MAX_IDLE=8
      - SPRING_REDIS_LETTUCE_POOL_MIN_IDLE=0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - musinsa-network
    volumes:
      - ./logs:/app/logs

  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: musinsa-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - musinsa-network

  # Redis Exporter - Redis 메트릭
  redis-exporter:
    image: oliver006/redis_exporter:v1.45.0
    container_name: musinsa-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    networks:
      - musinsa-network

  # Grafana - 시각화 대시보드
  grafana:
    image: grafana/grafana:9.3.0
    container_name: musinsa-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - musinsa-network
    depends_on:
      - prometheus

  # RedisInsight - Redis GUI
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: musinsa-redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/db
    networks:
      - musinsa-network
    depends_on:
      - redis

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redisinsight_data:
    driver: local

networks:
  musinsa-network:
    driver: bridge
